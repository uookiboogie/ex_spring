<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.hans.app.employees.mapper.EmployeesMapper">
  <!-- 조회 해보기 -->
  <sql id = "criteria">
         <trim prefix="(" suffix=") AND " prefixOverrides="OR">
           <foreach collection="typeArr" item="type">
             <trim prefix="OR">
               <choose>
	               <when test="type=='T'.toString()">
	                 employee_id LIKE '%'||#{keyword}||'%' 
	               </when>
	               <when test="type=='C'.toString()">
	                 last_name LIKE '%'||#{keyword}||'%'
	               </when>
	               <when test="type=='W'.toString()"> 
	                 job_id LIKE '%'||#{keyword}||'%' 
	               </when> 
               </choose>
             </trim>
           </foreach>
         </trim>
  </sql>
  
  <!-- 페이징 처리 위한 -->
  <select id="getTotalCount" resultType="int">
    SELECT COUNT(*) FROM employees
    where
      <include refid="criteria"></include>
    employee_id > 0
  </select>
  
  <!-- 전체조회 -->
  <select id="getList" resultType="co.hans.app.employees.domain.EmployeesVO">
    
    SELECT *
    FROM
      (SELECT /*+ INDEX_DESC(employees EMP_EMP_ID_PK)*/ROWNUM rn, EMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID
       FROM employees
       <where>
         <include refid="criteria"></include>

             <![CDATA[ ROWNUM <= #{pageNum} * #{amount}  ]]>
       </where> )
    WHERE rn > (#{pageNum}-1) * #{amount}
    
  </select>
  
  <!-- 단건조회 -->
  <select id="read" resultType="EmployeesVO">
    SELECT EMPLOYEE_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE_NUMBER,HIRE_DATE,JOB_ID,SALARY,COMMISSION_PCT,MANAGER_ID,DEPARTMENT_ID
    FROM employees
    WHERE 
         <choose>
           <when test="email != null and email !=''" >
                 email = #{email}
           </when>
           <otherwise>employee_id =#{employeeId}</otherwise>
         </choose>
  </select>
  
  <!-- 등록 -->  
  <insert id="insert">
    <selectKey keyProperty="employeeId" resultType="int" order="BEFORE">
      SELECT MAX(employee_id)+1 FROM employees
    </selectKey>
    INSERT INTO
    employees (employee_id, last_name, email, job_id, hire_date )
    VALUES    (#{employeeId}, #{lastName}, #{email}, #{jobId}, sysdate)
  </insert>
  
  <!--수정-->
  <update id="update">
    UPDATE employees
    SET salary=#{salary}
    WHERE employee_id =#{employeeId}
  </update>
  
  <!--삭제-->
  <delete id="delete">
    DELETE FROM employees
    WHERE employee_id = #{employeeId}
  
  </delete>
</mapper>